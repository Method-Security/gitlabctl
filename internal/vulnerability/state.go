package vulnerability

import (
	"strings"
)

type State string

const (
	StateDetected  State = "detected"
	StateResolved  State = "resolved"
	StateDismissed State = "dismissed"
)

func ToState(state string) State {
	switch strings.ToLower(state) {
	case "detected":
		return StateDetected
	case "resolved":
		return StateResolved
	case "dismissed":
		return StateDismissed
	}
	return StateDetected
}

func ToStates(states []string) []State {
	result := make([]State, 0)
	for _, state := range states {
		result = append(result, ToState(state))
	}
	return result
}

func ContainsState(state State, states []State) bool {
	for _, s := range states {
		if s == state {
			return true
		}
	}
	return false
}
